@model Chat

    <div>
        <a class="btn btn-primary" role="button" asp-controller="Chat" asp-action="FindGroup">Zoek naar groepen</a>
        <a class="btn btn-primary" role="button" asp-controller="Chat" asp-action="FindUser">Zoek naar gebruikers</a>
        <a class="btn btn-primary" role="button" asp-controller="Chat" asp-action="Private">Prive</a>
        <a class="btn btn-primary" role="button" asp-controller="Chat" asp-action="CreateRoom">Maak een groep aan</a>
    </div>
    
<div style="margin-top: 50px" class="chat-body">
    @foreach(var message in Model.Messages){
    <div class="message">
        <header>@message.UserName:</header>
        <p>@message.Text</p>
        <footer>@message.When</footer>
    </div>
    }
</div>
@if(!User.IsInRole("Assistent")){
<form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Chat" asp-action="CreateMessage">
    <input type="hidden" name="roomId" value="@Model.Id">
    <input type="text" name="message" id="message-input">
    <button type="submit">Verzend</button>
</form>
}

@section scripts {
<script src="~/js/signalr.min.js"></script>
<script src="~/js/messageBuilder.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("RecieveMessage", function (data) {
        var message = messageBuilder()
            .createMessage()
            .withHeader(data.name)
            .withParagraph(data.text)
            .withFooter(data.timestamp)
            .build();

        document.querySelector('.chat-body').append(message);
    })

    connection.start()
        .then(function () {
            connection.invoke('joinRoom', '@Model.Id');
        })
        @* Laat connectionId niet zien
        connection.invoke('GetConnectionId').then(function (id) {
                document.getElementById("connectionId").innerText = id;
        }) *@
        .catch(function (err) {
            console.log(err)
        })

    window.addEventListener('onunload', function () {
        connection.invoke('leaveRoom', '@Model.Id');
    })

    var sendMessage = function (event) {
        event.preventDefault();

        var data = new FormData(event.target);
        document.getElementById('message-input').value = '';
        axios.post('/Chat/SendMessage', data)
            .then(res => {
                console.log("Bericht verstuurd")
            })
            .catch(err => {
                console.log("Kan bericht niet verzenden!")
            })
    }

</script>
}